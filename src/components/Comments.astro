---
const { entry, lang } = Astro.locals.starlightRoute;
const {
    repo,
    repoId,
    category,
    categoryId,
    mapping,
    reactions,
    inputPosition,
    theme,
    lazy
} = globalThis.giscusConfig;
const preparedTheme = typeof theme === 'object' ? theme : { auto: theme };
const giscus = entry.data.giscus ?? true;
---
{
    giscus && (
        <giscus-comments data-theme={JSON.stringify(preparedTheme)}>
            <div class="comments">
                <script src="https://giscus.app/client.js"
                    data-repo={repo}
                    data-repo-id={repoId}
                    data-category={category}
                    data-category-id={categoryId}
                    data-mapping={mapping}
                    data-strict="1"
                    data-reactions-enabled={+reactions}
                    data-emit-metadata="0"
                    data-input-position={inputPosition}
                    data-theme={preparedTheme.auto}
                    data-lang={lang}
                    data-loading={lazy ? 'lazy' : null}
                    crossorigin="anonymous"
                    async
                >
                </script>
            </div>
        </giscus-comments>

        <script>
            class GiscusComments extends HTMLElement {
                constructor() {
                    super();

                    const theme = JSON.parse(this.dataset.theme!)

                    const darkTheme = theme.dark || 'dark';
                    const lightTheme = theme.light || 'light';
                    const preferredTheme = theme.auto || 'preferred_color_scheme';

                    const getThemeValue = () => {
                        const documentTheme = document.documentElement.dataset.theme;
                        
                        if (documentTheme === 'dark') {
                            return darkTheme;
                        } else if (documentTheme === 'light') {
                            return lightTheme;
                        } else {
                            return preferredTheme;
                        }
                    }

                    function setGiscusTheme() {
                        const frame = document.querySelector('iframe.giscus-frame') as HTMLIFrameElement;
                        if (!frame) return;
                        
                        const currentTheme = getThemeValue();

                        frame.contentWindow?.postMessage(
                            {
                                giscus: {
                                    setConfig: {
                                        theme: currentTheme
                                    }
                                }
                            },
                            '*'
                        )
                    }

                    function handleGiscusMessage(event: MessageEvent) {
                        if (event.origin !== 'https://giscus.app') return;
                        if (!(typeof event.data === 'object' && event.data.giscus)) return;
                        setGiscusTheme();
                    }

                    function setupThemeListener() {
                        const themeSelect = document.querySelector('starlight-rapide-theme-select');
                        if (themeSelect) {
                            const button = themeSelect.querySelector('button');
                            if (button) {
                                button.addEventListener('click', () => {
                                    setTimeout(setGiscusTheme, 50);
                                });
                            }
                        }

                        const observer = new MutationObserver((mutations) => {
                            mutations.forEach((mutation) => {
                                if (mutation.type === 'attributes' && 
                                    mutation.attributeName === 'data-theme' &&
                                    mutation.target === document.documentElement) {
                                    setGiscusTheme();
                                }
                            });
                        });

                        observer.observe(document.documentElement, {
                            attributes: true,
                            attributeFilter: ['data-theme']
                        });

                        const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
                        mediaQuery.addEventListener('change', () => {
                            const storedTheme = localStorage.getItem('starlight-theme');
                            if (!storedTheme || storedTheme === 'auto') {
                                setTimeout(setGiscusTheme, 50);
                            }
                        });

                        window.addEventListener('storage', (e) => {
                            if (e.key === 'starlight-theme') {
                                setTimeout(setGiscusTheme, 50);
                            }
                        });
                    }

                    if (document.readyState === 'loading') {
                        document.addEventListener('DOMContentLoaded', setupThemeListener);
                    } else {
                        setupThemeListener();
                    }
                    
                    window.addEventListener('message', handleGiscusMessage);
                }
            }

            customElements.define('giscus-comments', GiscusComments);
        </script>
    )
}

<style>
    .comments {
        padding-top: 1.5rem;
        margin-top: 1.5rem;
        border-top: 1px solid var(--sl-color-gray-5);

    }
</style>